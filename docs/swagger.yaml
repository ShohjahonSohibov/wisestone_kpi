basePath: /
definitions:
  models.AssignTeamRequest:
    properties:
      team_id:
        type: string
      user_id:
        type: string
    required:
    - team_id
    - user_id
    type: object
  models.CreateKPICriterion:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      division_id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      total_ratio:
        type: number
    type: object
  models.CreateKPIDivision:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      parent_id:
        type: string
    type: object
  models.CreateKPIFactor:
    properties:
      criterion_id:
        type: string
      description_en:
        type: string
      description_kr:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      ratio:
        type: number
    type: object
  models.CreateKPIFactorIndicator:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      factor_id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      progress_range:
        type: integer
    type: object
  models.CreateKPIParent:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      type:
        type: string
    type: object
  models.CreateKPIProgress:
    properties:
      created_by_id:
        type: string
      date:
        type: string
      employee_id:
        type: string
      factor_id:
        type: string
      factor_indicator_id:
        type: string
      ratio:
        type: integer
      team_id:
        type: string
    type: object
  models.CreatePermission:
    properties:
      action_en:
        type: string
      action_kr:
        type: string
      description_en:
        type: string
      description_kr:
        type: string
    required:
    - action_kr
    type: object
  models.CreateRolePermission:
    properties:
      permission_id:
        type: string
      role_id:
        type: string
    required:
    - permission_id
    - role_id
    type: object
  models.CreateTeam:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      leader_id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
    type: object
  models.CreateUser:
    properties:
      email:
        type: string
      full_name_en:
        type: string
      full_name_kr:
        type: string
      password:
        type: string
      position:
        type: string
      role_id:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.KPIParent:
    properties:
      created_at:
        type: string
      description_en:
        type: string
      description_kr:
        type: string
      divisions:
        items:
          $ref: '#/definitions/models.ShortKPIDivision'
        type: array
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      rejection_count:
        type: integer
      status:
        type: string
      type:
        type: string
      updated_at:
        type: string
      year:
        type: string
    type: object
  models.KPIPrgParent:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      divisions:
        items:
          $ref: '#/definitions/models.ShortKPIPrgDivision'
        type: array
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      status:
        type: string
      total_ratio:
        type: number
      type:
        type: string
      year:
        type: string
    type: object
  models.KPIProgress:
    properties:
      created_at:
        type: string
      created_by_id:
        type: string
      date:
        type: string
      employee_id:
        type: string
      factor_id:
        type: string
      factor_indicator_id:
        type: string
      id:
        type: string
      kpi:
        $ref: '#/definitions/models.KPIPrgParent'
      ratio:
        type: integer
      team_id:
        type: string
      updated_at:
        type: string
    type: object
  models.ListKPIParentResponse:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.KPIParent'
        type: array
    type: object
  models.ListKPIProgressResponse:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.KPIProgress'
        type: array
      progress:
        $ref: '#/definitions/models.KPIProgress'
    type: object
  models.ListPermissionResponse:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.Permission'
        type: array
    type: object
  models.ListRolePermissionResponse:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.RolePermission'
        type: array
    type: object
  models.ListTeamsResponse:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.Team'
        type: array
    type: object
  models.ListUsersResponse:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.LoginResponse:
    properties:
      role_id:
        $ref: '#/definitions/models.LoginResponseRole'
      token:
        type: string
    type: object
  models.LoginResponseRole:
    properties:
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
    required:
    - name_en
    - name_kr
    type: object
  models.Permission:
    properties:
      action_en:
        type: string
      action_kr:
        type: string
      created_at:
        type: string
      description_en:
        type: string
      description_kr:
        type: string
      id:
        type: string
      updated_at:
        type: string
    required:
    - action_kr
    type: object
  models.Role:
    properties:
      created_at:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      updated_at:
        type: string
    required:
    - name_en
    - name_kr
    type: object
  models.RolePermission:
    properties:
      created_at:
        type: string
      id:
        type: string
      permission:
        $ref: '#/definitions/models.ShortPermission'
      permission_id:
        type: string
      role:
        $ref: '#/definitions/models.ShortRole'
      role_id:
        type: string
      updated_at:
        type: string
    type: object
  models.ShortKPICriterion:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      factors:
        items:
          $ref: '#/definitions/models.ShortKPIFactor'
        type: array
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      total_ratio:
        type: number
    type: object
  models.ShortKPIDivision:
    properties:
      criterions:
        items:
          $ref: '#/definitions/models.ShortKPICriterion'
        type: array
      description_en:
        type: string
      description_kr:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
    type: object
  models.ShortKPIFactor:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      factor_indicators:
        items:
          $ref: '#/definitions/models.ShortKPIFactorIndicator'
        type: array
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      ratio:
        type: number
    type: object
  models.ShortKPIFactorIndicator:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      progress_range:
        type: integer
    type: object
  models.ShortKPIPrgCriterion:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      factors:
        items:
          $ref: '#/definitions/models.ShortKPIPrgFactor'
        type: array
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      total_ratio:
        type: number
    type: object
  models.ShortKPIPrgDivision:
    properties:
      criterions:
        items:
          $ref: '#/definitions/models.ShortKPIPrgCriterion'
        type: array
      description_en:
        type: string
      description_kr:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      total_ratio:
        type: number
    type: object
  models.ShortKPIPrgFactor:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      factor_indicators:
        items:
          $ref: '#/definitions/models.ShortKPIPrgFactorIndicator'
        type: array
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      ratio:
        type: number
      total_ratio:
        type: number
    type: object
  models.ShortKPIPrgFactorIndicator:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      progress_range:
        type: integer
      ratio:
        type: integer
    type: object
  models.ShortPermission:
    properties:
      action_kr:
        type: string
      action_ru:
        type: string
      id:
        type: string
    type: object
  models.ShortRole:
    properties:
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
    type: object
  models.Team:
    properties:
      created_at:
        type: string
      description_en:
        type: string
      description_kr:
        type: string
      id:
        type: string
      leader_id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      updated_at:
        type: string
    type: object
  models.TeamShort:
    properties:
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
    type: object
  models.UpdateKPICriterion:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      division_id:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      total_ratio:
        type: number
    type: object
  models.UpdateKPIDivision:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      parent_id:
        type: string
    type: object
  models.UpdateKPIFactor:
    properties:
      criterion_id:
        type: string
      description_en:
        type: string
      description_kr:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      ratio:
        type: number
    type: object
  models.UpdateKPIFactorIndicator:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      factor_id:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      progress_range:
        type: integer
    type: object
  models.UpdateKPIParent:
    properties:
      description_en:
        type: string
      description_kr:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_kr:
        type: string
      type:
        type: string
    type: object
  models.UpdateKPIParentStatus:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  models.UpdatePermission:
    properties:
      action_en:
        type: string
      action_kr:
        type: string
      description_en:
        type: string
      description_kr:
        type: string
      id:
        type: string
    required:
    - action_kr
    type: object
  models.UpdateRolePermission:
    properties:
      id:
        type: string
      permission_id:
        type: string
      role_id:
        type: string
    required:
    - permission_id
    - role_id
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name_en:
        type: string
      full_name_kr:
        type: string
      id:
        type: string
      is_team_leader:
        type: boolean
      password:
        type: string
      position:
        type: string
      role:
        $ref: '#/definitions/models.ShortRole'
      role_id:
        type: string
      team:
        $ref: '#/definitions/models.TeamShort'
      team_id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
host: wisestone-kpi.onrender.com
info:
  contact:
    email: support@wisestonet.com
    name: Developer Team
  description: API for KPI system for Wisestone T Company
  title: KPI System API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login Request
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'token: JWT Token'
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Authenticate an existing user
      tags:
      - Authentication
  /api/v1/kpi-criterions:
    get:
      consumes:
      - application/json
      description: Get a list of KPI Criterions with filtering and pagination
      parameters:
      - in: query
        name: division_id
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: multi_search
        type: string
      - in: query
        name: offset
        type: integer
      - in: query
        name: page
        type: integer
      - enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: ListKPICriterionResponse'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List KPI Criterions
      tags:
      - KPI Criterions
    post:
      consumes:
      - application/json
      description: Create a new KPI Criterion
      parameters:
      - description: KPI Criterion creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateKPICriterion'
      produces:
      - application/json
      responses:
        "201":
          description: 'status: 201, message: KPI Criterion created successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create KPI Criterion
      tags:
      - KPI Criterions
  /api/v1/kpi-criterions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a KPI Criterion
      parameters:
      - description: KPI Criterion ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Criterion deleted successfully'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete KPI Criterion
      tags:
      - KPI Criterions
    get:
      consumes:
      - application/json
      description: Get a KPI Criterion by its ID
      parameters:
      - description: KPI Criterion ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: KPI Criterion object'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'status: 404, message: kpi criterion not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get KPI Criterion by ID
      tags:
      - KPI Criterions
    put:
      consumes:
      - application/json
      description: Update an existing KPI Criterion
      parameters:
      - description: KPI Criterion ID
        in: path
        name: id
        required: true
        type: string
      - description: KPI Criterion update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateKPICriterion'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Criterion updated successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update KPI Criterion
      tags:
      - KPI Criterions
  /api/v1/kpi-divisions:
    get:
      consumes:
      - application/json
      description: Get a list of KPI Divisions with filtering and pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search in name fields
        in: query
        name: multi_search
        type: string
      - description: Sort order (asc/desc)
        in: query
        name: sort_order
        type: string
      - description: Filter by parent ID
        in: query
        name: parent_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: ListKPIDivisionResponse'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List KPI Divisions
      tags:
      - KPI Divisions
    post:
      consumes:
      - application/json
      description: Create a new KPI Division
      parameters:
      - description: KPI Division creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateKPIDivision'
      produces:
      - application/json
      responses:
        "201":
          description: 'status: 201, message: KPI Division created successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create KPI Division
      tags:
      - KPI Divisions
  /api/v1/kpi-divisions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a KPI Division
      parameters:
      - description: KPI Division ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Division deleted successfully'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete KPI Division
      tags:
      - KPI Divisions
    get:
      consumes:
      - application/json
      description: Get a KPI Division by its ID
      parameters:
      - description: KPI Division ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: KPI Division object'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'status: 404, message: kpi division not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get KPI Division by ID
      tags:
      - KPI Divisions
    put:
      consumes:
      - application/json
      description: Update an existing KPI Division
      parameters:
      - description: KPI Division ID
        in: path
        name: id
        required: true
        type: string
      - description: KPI Division update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateKPIDivision'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Division updated successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update KPI Division
      tags:
      - KPI Divisions
  /api/v1/kpi-factor-indicators:
    get:
      consumes:
      - application/json
      description: Get a list of KPI Factor Indicators with filtering and pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search in name fields
        in: query
        name: multi_search
        type: string
      - description: Sort order (asc/desc)
        in: query
        name: sort_order
        type: string
      - description: Filter by factor ID
        in: query
        name: factor_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: ListKPIFactorIndicatorResponse'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List KPI Factor Indicators
      tags:
      - KPI Factor Indicators
    post:
      consumes:
      - application/json
      description: Create a new KPI Factor Indicator
      parameters:
      - description: KPI Factor Indicator creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateKPIFactorIndicator'
      produces:
      - application/json
      responses:
        "201":
          description: 'status: 201, message: KPI Factor Indicator created successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create KPI Factor Indicator
      tags:
      - KPI Factor Indicators
  /api/v1/kpi-factor-indicators/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a KPI Factor Indicator
      parameters:
      - description: KPI Factor Indicator ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Factor Indicator deleted successfully'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete KPI Factor Indicator
      tags:
      - KPI Factor Indicators
    get:
      consumes:
      - application/json
      description: Get a KPI Factor Indicator by its ID
      parameters:
      - description: KPI Factor Indicator ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: KPI Factor Indicator object'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'status: 404, message: kpi factor indicator not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get KPI Factor Indicator by ID
      tags:
      - KPI Factor Indicators
    put:
      consumes:
      - application/json
      description: Update an existing KPI Factor Indicator
      parameters:
      - description: KPI Factor Indicator ID
        in: path
        name: id
        required: true
        type: string
      - description: KPI Factor Indicator update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateKPIFactorIndicator'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Factor Indicator updated successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update KPI Factor Indicator
      tags:
      - KPI Factor Indicators
  /api/v1/kpi-factors:
    get:
      consumes:
      - application/json
      description: Get a list of KPI Factors with filtering and pagination
      parameters:
      - in: query
        name: criterion_id
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: multi_search
        type: string
      - in: query
        name: offset
        type: integer
      - in: query
        name: page
        type: integer
      - enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: ListKPIFactorResponse'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List KPI Factors
      tags:
      - KPI Factors
    post:
      consumes:
      - application/json
      description: Create a new KPI Factor
      parameters:
      - description: KPI Factor creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateKPIFactor'
      produces:
      - application/json
      responses:
        "201":
          description: 'status: 201, message: KPI Factor created successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create KPI Factor
      tags:
      - KPI Factors
  /api/v1/kpi-factors/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a KPI Factor
      parameters:
      - description: KPI Factor ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Factor deleted successfully'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete KPI Factor
      tags:
      - KPI Factors
    get:
      consumes:
      - application/json
      description: Get a KPI Factor by its ID
      parameters:
      - description: KPI Factor ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: KPI Factor object'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'status: 404, message: kpi factor not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get KPI Factor by ID
      tags:
      - KPI Factors
    put:
      consumes:
      - application/json
      description: Update an existing KPI Factor
      parameters:
      - description: KPI Factor ID
        in: path
        name: id
        required: true
        type: string
      - description: KPI Factor update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateKPIFactor'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Factor updated successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update KPI Factor
      tags:
      - KPI Factors
  /api/v1/kpi-parents:
    get:
      description: Get a list of KPI Parents with filtering and pagination
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: multi_search
        type: string
      - in: query
        name: offset
        type: integer
      - in: query
        name: page
        type: integer
      - enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: type
        type: string
      - in: query
        name: year
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListKPIParentResponse'
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List KPI Parents
      tags:
      - KPI Parents
    post:
      consumes:
      - application/json
      description: Create a new KPI Parent
      parameters:
      - description: KPI Parent creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateKPIParent'
      produces:
      - application/json
      responses:
        "201":
          description: 'status: 201, message: KPI Parent created successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create KPI Parent
      tags:
      - KPI Parents
  /api/v1/kpi-parents/{id}:
    delete:
      description: Delete a KPI Parent by ID
      parameters:
      - description: KPI Parent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Parent deleted successfully'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete KPI Parent
      tags:
      - KPI Parents
    get:
      description: Get a KPI Parent by its ID
      parameters:
      - description: KPI Parent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: KPI Parent object'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get KPI Parent by ID
      tags:
      - KPI Parents
    put:
      consumes:
      - application/json
      description: Update an existing KPI Parent by ID
      parameters:
      - description: KPI Parent ID
        in: path
        name: id
        required: true
        type: string
      - description: KPI Parent update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateKPIParent'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Parent updated successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update KPI Parent
      tags:
      - KPI Parents
  /api/v1/kpi-parents/status/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing KPI Parent Status by ID
      parameters:
      - description: KPI Parent ID
        in: path
        name: id
        required: true
        type: string
      - description: KPI Parent status update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateKPIParentStatus'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: KPI Parent status updated successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update KPI Parent Status
      tags:
      - KPI Parents
  /api/v1/kpi-progresses:
    get:
      description: Get a list of KPI progress records with pagination and filtering
      parameters:
      - description: Filter by date
        in: query
        name: date
        type: string
      - description: Filter by user ID
        in: query
        name: user_id
        type: string
      - description: Filter by team ID
        in: query
        name: team_id
        type: string
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListKPIProgressResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List KPI Progress
      tags:
      - KPI Progress
    post:
      consumes:
      - application/json
      description: Create a new KPI progress record
      parameters:
      - description: KPI Progress details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateKPIProgress'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.KPIProgress'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create KPI Progress
      tags:
      - KPI Progress
  /api/v1/kpi-progresses/{id}:
    delete:
      description: Delete a KPI progress record
      parameters:
      - description: Progress ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete KPI Progress
      tags:
      - KPI Progress
  /api/v1/permissions:
    get:
      consumes:
      - application/json
      description: Get a list of all permissions
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: multi_search
        type: string
      - in: query
        name: offset
        type: integer
      - in: query
        name: page
        type: integer
      - enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListPermissionResponse'
        "400":
          description: 'error: Invalid parameters'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List all permissions
      tags:
      - Permissions
    post:
      consumes:
      - application/json
      description: Create a new permission with the provided details
      parameters:
      - description: Permission Details
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/models.CreatePermission'
      produces:
      - application/json
      responses:
        "201":
          description: 'message: Permission created successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Validation error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new permission
      tags:
      - Permissions
  /api/v1/permissions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete permission by ID
      parameters:
      - description: Permission Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Permission deleted successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Permission not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete permission
      tags:
      - Permissions
    get:
      consumes:
      - application/json
      description: Get permission details by id
      parameters:
      - description: Permission Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Permission'
        "404":
          description: 'error: Permission not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get permission by id
      tags:
      - Permissions
    put:
      consumes:
      - application/json
      description: Update permission details by ID
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      - description: Permission Details
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePermission'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Permission updated successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Validation error'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Permission not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update existing permission
      tags:
      - Permissions
  /api/v1/role-permissions:
    get:
      consumes:
      - application/json
      description: Get a list of all role-permissions
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: multi_search
        type: string
      - in: query
        name: offset
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: permission_id
        type: string
      - in: query
        name: role_id
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListRolePermissionResponse'
        "400":
          description: 'error: Invalid parameters'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List all role-permissions
      tags:
      - RolePermissions
    post:
      consumes:
      - application/json
      description: Create a new role-permission with the provided details
      parameters:
      - description: RolePermission Details
        in: body
        name: rolePermission
        required: true
        schema:
          $ref: '#/definitions/models.CreateRolePermission'
      produces:
      - application/json
      responses:
        "201":
          description: 'message: RolePermission created successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Validation error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new role-permission
      tags:
      - RolePermissions
  /api/v1/role-permissions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete role-permission by ID
      parameters:
      - description: RolePermission Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: RolePermission deleted successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: RolePermission not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete role-permission
      tags:
      - RolePermissions
    get:
      consumes:
      - application/json
      description: Get role-permission details by id
      parameters:
      - description: RolePermission Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RolePermission'
        "404":
          description: 'error: RolePermission not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get role-permission by id
      tags:
      - RolePermissions
    put:
      consumes:
      - application/json
      description: Update role-permission details by ID
      parameters:
      - description: RolePermission ID
        in: path
        name: id
        required: true
        type: string
      - description: RolePermission Details
        in: body
        name: rolePermission
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRolePermission'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: RolePermission updated successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Validation error'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: RolePermission not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update existing role-permission
      tags:
      - RolePermissions
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: Get a list of all roles
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: multi_search
        type: string
      - in: query
        name: offset
        type: integer
      - in: query
        name: page
        type: integer
      - enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: roles'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: Invalid parameters'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'status: 401, message: Unauthorized'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: 500, message: Internal server error'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List all roles
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Create a new role with the provided details
      parameters:
      - description: Role Details
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "201":
          description: 'status: 201, message: role created successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'status: 401, message: Unauthorized'
          schema:
            additionalProperties: true
            type: object
        "409":
          description: 'status: 409, message: error message'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new role
      tags:
      - Roles
  /api/v1/roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete role by ID
      parameters:
      - description: Role Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: role deleted successfully'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'status: 401, message: Unauthorized'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'status: 404, message: Role not found'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete role
      tags:
      - Roles
    get:
      consumes:
      - application/json
      description: Get role details by id
      parameters:
      - description: Role Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, data: Role'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'status: 401, message: Unauthorized'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'status: 404, message: Role not found'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get role by id
      tags:
      - Roles
    put:
      consumes:
      - application/json
      description: Update role details by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Role Details
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: role updated successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'status: 401, message: Unauthorized'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'status: 404, message: Role not found'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update existing role
      tags:
      - Roles
  /api/v1/teams:
    get:
      consumes:
      - application/json
      description: Get a list of all teams
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: multi_search
        type: string
      - in: query
        name: offset
        type: integer
      - in: query
        name: page
        type: integer
      - enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListTeamsResponse'
        "400":
          description: 'error: Invalid parameters'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List all teams
      tags:
      - Teams
    post:
      consumes:
      - application/json
      description: Create a new team with the provided details
      parameters:
      - description: Team Details
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/models.CreateTeam'
      produces:
      - application/json
      responses:
        "201":
          description: 'message: Team created successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Validation error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new team
      tags:
      - Teams
  /api/v1/teams/{id}:
    delete:
      consumes:
      - application/json
      description: Delete team by ID
      parameters:
      - description: Team Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Team deleted successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Team not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete team
      tags:
      - Teams
    get:
      consumes:
      - application/json
      description: Get team details by id
      parameters:
      - description: Team Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Team'
        "404":
          description: 'error: Team not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get team by id
      tags:
      - Teams
    put:
      consumes:
      - application/json
      description: Update team details by ID
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      - description: Team Details
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/models.Team'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Team updated successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Validation error'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Team not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update existing team
      tags:
      - Teams
  /api/v1/user-teams:
    put:
      consumes:
      - application/json
      description: Assign a user to a specific team
      parameters:
      - description: Request body with user_id and team_id
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AssignTeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: User assigned to team successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'status: 404, message: User not found'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Assign user to a team
      tags:
      - Users
  /api/v1/user-teams/{user_id}:
    delete:
      consumes:
      - application/json
      description: Remove a user from their current team
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: 200, message: User removed from team successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: 400, message: error message'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'status: 404, message: User not found'
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Remove user from team
      tags:
      - Users
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: multi_search
        type: string
      - in: query
        name: offset
        type: integer
      - in: query
        name: page
        type: integer
      - enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      - in: query
        name: team_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListUsersResponse'
        "400":
          description: 'error: Invalid parameters'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user with the provided details
      parameters:
      - description: User Details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: 'message: User created successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Validation error'
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: 'error: User already exists'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new user
      tags:
      - Users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by email
      parameters:
      - description: User Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: User deleted successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: User not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user details by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: User updated successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Validation error'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: User not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update existing user
      tags:
      - Users
  /api/v1/users/single:
    get:
      consumes:
      - application/json
      description: Get user details by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: 'error: User not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    description: 'Enter your bearer token in the format: Bearer <token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
